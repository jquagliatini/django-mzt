name: CI

on:
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

      - name: Setup UV
        uses: astral-sh/setup-uv@v6.6.0
        with:
          version: '0.8.3'

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run Ruff formatter
        run: uv run ruff format

      - name: Commit changes (if any)
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "style: auto-format with ruff"
            git push
          fi

  lint:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - uses: actions/checkout@v4

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

      - name: Setup UV
        uses: astral-sh/setup-uv@v6.6.0
        with:
          version: '0.8.3'

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run Ruff lint (with fix)
        run: uv run ruff check --fix

      - name: Commit changes (if any)
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "chore: auto-lint with ruff"
            git push
          fi

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      sqlite:
        image: nouchka/sqlite3:latest
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v4

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

      - name: Setup UV
        uses: astral-sh/setup-uv@v6.6.0
        with:
          version: '0.8.3'

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run migrations
        run: |
          uv run timers/manage.py migrate --noinput

      - name: Run tests
        run: |
          cd timers
          uv run pytest
